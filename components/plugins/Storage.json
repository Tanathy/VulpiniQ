{
  "Name": "Storage",
  "Method": "Static",
  "Desc": "A utility function to manage data in localStorage with optional compression.",
  "Long Desc": "This function provides a way to store and retrieve data in the browser's localStorage. It supports storing strings and JSON objects, and it can optionally compress the data using LZW compression to reduce storage size. The function can be used to set a value for a given key, retrieve a value by key, and remove a key from localStorage. Compression can be enabled or disabled via the compressionEnabled parameter.",
  "Type": "Utility",
  "Example": [
    "// Store a string in localStorage with compression enabled\nQ.Storage('myString', 'Hello, world!', true);",
    "// Store a JSON object in localStorage\nQ.Storage('myObject', { name: 'John', age: 30 });",
    "// Retrieve the string from localStorage\nlet myString = Q.Storage('myString');\nconsole.log(myString); // Output: Hello, world!",
    "// Retrieve the JSON object from localStorage\nlet myObject = Q.Storage('myObject');\nconsole.log(myObject); // Output: { name: 'John', age: 30 }",
    "// Remove the key from localStorage\nQ.Storage('myString', null);"
  ],
  "Variables": [
    "storageKey",
    "storageValue",
    "compressionEnabled",
    "lzw_compress",
    "lzw_decompress",
    "input",
    "dictionary",
    "current",
    "result",
    "code",
    "index",
    "character",
    "combined",
    "previous",
    "entry",
    "currentCode",
    "dataString",
    "error"
  ]
}

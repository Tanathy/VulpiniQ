{
  "Name": "Image.ComicEffect",
  "Method": "Prototype",
  "Desc": "Applies a comic-style color quantization and optional edge detection. Chainable. If the selection is empty, no action is taken and the chain continues.",
  "LongDesc": "The ComicEffect method reduces the number of color levels in the image and can optionally apply edge detection for a cartoon/comic look. It supports color step configuration, saturation adjustment, and edge detection parameters. This method is chainable: it returns the Q.Image instance for further operations. If called on an empty selection, it does nothing and returns the chain.",
  "Type": "Image Effect",
  "Example": [
    "var img = new Q.Image({ width: 300, height: 200 });\nimg.Load('photo.jpg', function() { img.ComicEffect(6, { edgeDetection: true }); });",
    "Q.Image().Load('img.png').ComicEffect(4, { saturation: 1.5 });",
    "Q.Image().Load('img.png').ComicEffect(8).ComicEffect(2, { edgeDetection: false }); // chaining",
    "Q.Image([]).ComicEffect(6).ComicEffect(4); // empty selection, no error, chain continues"
  ],
  "Dependencies": ["Q.Image"],
  "Variables": ["defaultOptions", "finalOptions", "canvas_node", "temp", "ctx", "imageData", "pixels"]
}

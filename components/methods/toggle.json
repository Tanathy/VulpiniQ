{
    "Name": "toggle",
    "Method": "Prototype",
    "Desc": "Toggles the display of each node. Chainable. Does nothing for empty selection.",
    "LongDesc": "Switches the visibility state of each element in the set. Elements that are visible become hidden, and hidden elements become visible. The method is chainable and does nothing if the selection is empty. This method provides a simple way to implement show/hide functionality without manually checking the current display state. It's commonly used for implementing collapsible sections, dropdown menus, or any UI component that needs to alternate between visible and hidden states.",
    "Type": "Display",
    "Example": [
        "Q(selector).toggle(); // Toggle display",
        "Q('#details').toggle(); // Toggle #details",
        "Q('.expandable').click(function() { Q(this).next().toggle(); }); // Toggle next element on click",
        "const panels = Q('.panel'); panels.toggle(); // Toggle all panels",
        "Q('.panel').toggle().addClass('toggled'); // Chaining after toggle",
        "Q('.missing').toggle(); // Does nothing for empty selection"
    ],
    "Dependencies": []
}

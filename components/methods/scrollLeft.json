{
    "Name": "scrollLeft",
    "Method": "Prototype",
    "Desc": "Gets or sets the horizontal scroll position of the first node, with an option to increment. Returns undefined for empty selection.",
    "LongDesc": "Controls the horizontal scrolling position of elements. When called without parameters, returns the current horizontal scroll position of the first element, or undefined if the selection is empty. When provided with a value, sets the horizontal scroll position for all elements, respecting maximum scroll boundaries. The increment parameter allows for relative scrolling (adding to current position) rather than absolute positioning. The setter is chainable. This method is particularly useful for horizontally scrolling containers like carousels or horizontal galleries.",
    "Type": "Scroll Manipulation",
    "Example": [
        "const position = Q('.scrollable').scrollLeft(); // Get scroll position",
        "Q('#horizontal-container').scrollLeft(200); // Set scroll position",
        "Q('.slider').scrollLeft(50, true); // Increment by 50px",
        "const scrollAmount = 100; Q('.carousel').scrollLeft(scrollAmount, true); // Increment by variable",
        "Q('.carousel').scrollLeft(300).addClass('scrolled'); // Chaining after set",
        "Q('.missing').scrollLeft(); // Returns undefined for empty selection"
    ],
    "Dependencies": []
}

{
    "Name": "toggleClass",
    "Method": "Prototype",
    "Desc": "Toggles a class on each node. Chainable. Does nothing for empty selection.",
    "LongDesc": "Adds or removes a class from each element in the set depending on its current state. If the class exists on an element, it is removed; if it doesn't exist, it is added. The method is chainable and does nothing if the selection is empty. This method provides a convenient way to switch between visual states without needing to check the current class state manually, making it ideal for implementing UI toggles, accordions, or any interface element that alternates between two states.",
    "Type": "Class Manipulation",
    "Example": [
        "Q(selector).toggleClass('active'); // Toggle 'active' class",
        "Q('#menu-button').toggleClass('open'); // Toggle 'open' class",
        "const highlightClass = 'highlight'; Q('.selectable').toggleClass(highlightClass); // Toggle variable class",
        "Q(event.target).toggleClass('selected').siblings().toggleClass('dimmed'); // Chaining with siblings",
        "Q('.panel').toggleClass('expanded').addClass('checked'); // Chaining after toggleClass",
        "Q('.missing').toggleClass('foo'); // Does nothing for empty selection"
    ],
    "Dependencies": [],
    "Variables": []
}

{
  "Name": "inside",
  "Method": "Prototype",
  "Desc": "Checks if the first node is inside another node, determined by a specific selector.",
  "LongDesc": "The inside method provides a way to check if an element is contained within another specified parent element. It leverages the DOM's closest() method to determine if the first node in the collection has an ancestor that matches the given selector. This is particularly useful for event delegation, checking containment relationships, or implementing conditional logic based on DOM hierarchy. Unlike direct parent checks, inside() can find ancestors at any level in the DOM tree.",
  "Type": "Traversal",
  "Example": [
    { "Script": "Q(selector).inside(\".parent\");" },
    { "Script": "if(Q('.child').inside('#container')) { /* do something */ }" },
    { "Script": "Q('.item').inside('section.content')" }
  ],
  "Dependencies": [],
  "Variables": ["selector", "node"]
}

{
    "Name": "width",
    "Method": "Prototype",
    "Desc": "Gets or sets the width of the first node, or sets the width for all nodes. Returns undefined for empty selection.",
    "LongDesc": "Controls the width dimension of elements. When called without parameters, returns the current width (offsetWidth, including padding and border) of the first element in the set, or undefined if the selection is empty. When provided with a value, sets the CSS width property for all elements in the set, accepting values in pixels, percentages, or other CSS units. The setter is chainable, allowing further method calls. This method provides a convenient way to manage element dimensions programmatically.",
    "Type": "Dimensions",
    "Example": [
        "Q(selector).width(); // Get width of first element (px)",
        "Q('#content').width('500px'); // Set width in px",
        "const elemWidth = Q('.box').width(); // Get width of .box",
        "Q('.column').width('50%'); // Set width in percent",
        "Q('.panel').width('80vw').addClass('wide'); // Chaining after set",
        "Q('.missing').width(); // Returns undefined for empty selection"
    ],
    "Dependencies": [],
    "Variables": []
}

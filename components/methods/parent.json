{
    "Name": "parent",
    "Method": "Prototype",
    "Desc": "Gets the parent element of each node, optionally filtered by a selector.",
    "Long Desc": "Returns the immediate parent element of each element in the set, with an optional selector for filtering. This traversal method moves up exactly one level in the DOM tree. Unlike parents() which can retrieve multiple ancestors, parent() only selects the direct container. This method is essential for working with element relationships, responding to events by manipulating parent containers, or accessing contextual elements without needing to redefine selectors.",
    "Type": "Traversal",
    "Example": [
        "const container = Q('#element').parent();",
        "Q('li.active').parent().addClass('has-active-item');",
        "Q('.error-message').parent('form').addClass('has-error');",
        "const formParent = Q('input[name=\"email\"]').parent('.form-group');"
    ],
    "Dependencies": [],
    "Variables": ["selector", "node", "parent", "i", "n"]
}

{
    "Name": "children",
    "Method": "Prototype",
    "Desc": "Gets the direct child elements of each node, optionally filtered by a selector.",
    "Long Desc": "Returns all direct child elements of each element in the set, with an optional selector to filter the results. Unlike find() which returns all descendants at any depth, children() only returns immediate children (one level down). This method is particularly useful for traversing and manipulating hierarchical structures like lists, tables, or navigation menus where you need to work specifically with direct children without affecting deeper nested elements.",
    "Type": "Traversal",
    "Example": [
        "const items = Q('ul').children();",
        "Q('#menu').children('.active').addClass('highlight');",
        "const visibleItems = Q('.container').children(':visible');",
        "const selector = 'li'; Q('nav').children(selector).css('display', 'inline-block');"
    ],
    "Dependencies": [],
    "Variables": ["selector", "node", "children", "matching", "i", "j", "n"]
}
